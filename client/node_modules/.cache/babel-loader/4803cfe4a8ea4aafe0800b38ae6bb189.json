{"ast":null,"code":"var _jsxFileName = \"/Users/gayatrikrishnakumar/Documents/Interdepartmental EL/client/src/components/UploadDoc.js\";\nimport React, { useState } from 'react';\nimport './UploadDoc.css'; // Import the CSS for styling\n\nfunction UploadDoc() {\n  const [file, setFile] = useState(null);\n  const [result, setResult] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    console.log(\"Selected file:\", selectedFile);\n    setFile(selectedFile);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setMessage(\"Please select a file first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"docfile\", file);\n    try {\n      const response = await fetch(\"http://localhost:5004/api/upload-document\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setResult(data.result);\n        setMessage(\"File processed successfully!\");\n      } else {\n        setMessage(data.message || \"Error processing file.\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      setMessage(\"Error uploading file.\");\n    }\n  };\n\n  // When clicking on the upload box, trigger the hidden file input\n  const handleBoxClick = () => {\n    document.getElementById('fileInput').click();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-box\",\n    onClick: handleBoxClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDCE4\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"upload-instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Drag & drop your .docx file here, or click to select a file.\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"fileInput\",\n    type: \"file\",\n    accept: \".docx\",\n    onChange: handleFileChange,\n    className: \"file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUpload,\n    className: \"upload-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Upload and Process\"), message && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"upload-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, message), result && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Extracted Data:\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, result)));\n}\nexport default UploadDoc;","map":{"version":3,"names":["React","useState","UploadDoc","file","setFile","result","setResult","message","setMessage","handleFileChange","e","selectedFile","target","files","console","log","handleUpload","formData","FormData","append","response","fetch","method","body","data","json","ok","error","handleBoxClick","document","getElementById","click","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","type","accept","onChange"],"sources":["/Users/gayatrikrishnakumar/Documents/Interdepartmental EL/client/src/components/UploadDoc.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './UploadDoc.css'; // Import the CSS for styling\n\nfunction UploadDoc() {\n  const [file, setFile] = useState(null);\n  const [result, setResult] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    console.log(\"Selected file:\", selectedFile);\n    setFile(selectedFile);\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      setMessage(\"Please select a file first.\");\n      return;\n    }\n    \n    const formData = new FormData();\n    formData.append(\"docfile\", file);\n    \n    try {\n      const response = await fetch(\"http://localhost:5004/api/upload-document\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setResult(data.result);\n        setMessage(\"File processed successfully!\");\n      } else {\n        setMessage(data.message || \"Error processing file.\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      setMessage(\"Error uploading file.\");\n    }\n  };\n\n  // When clicking on the upload box, trigger the hidden file input\n  const handleBoxClick = () => {\n    document.getElementById('fileInput').click();\n  };\n\n  return (\n    <div className=\"upload-container\">\n      <div className=\"upload-box\" onClick={handleBoxClick}>\n        <div className=\"upload-icon\">ðŸ“¤</div>\n        <p className=\"upload-instructions\">\n          Drag & drop your .docx file here, or click to select a file.\n        </p>\n        <input \n          id=\"fileInput\"\n          type=\"file\" \n          accept=\".docx\" \n          onChange={handleFileChange} \n          className=\"file-input\"\n        />\n      </div>\n      <button onClick={handleUpload} className=\"upload-button\">Upload and Process</button>\n      {message && <p className=\"upload-message\">{message}</p>}\n      {result && (\n        <div className=\"result-box\">\n          <h3>Extracted Data:</h3>\n          <pre>{result}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UploadDoc;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}