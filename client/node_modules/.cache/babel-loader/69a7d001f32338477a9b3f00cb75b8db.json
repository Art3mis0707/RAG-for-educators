{"ast":null,"code":"var _jsxFileName = \"/Users/gayatrikrishnakumar/Documents/Interdepartmental EL/client/src/components/UploadDoc.js\";\n// /client/src/components/UploadDoc.js\nimport React, { useState } from 'react';\nfunction UploadDoc() {\n  const [file, setFile] = useState(null);\n  const [result, setResult] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setMessage(\"Please select a file first.\");\n      return;\n    }\n\n    // Prepare FormData\n    const formData = new FormData();\n    formData.append(\"docfile\", file);\n    try {\n      const response = await fetch(\"http://localhost:5004/api/upload-document\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setResult(data.result);\n        setMessage(\"File processed successfully!\");\n      } else {\n        setMessage(data.message || \"Error processing file.\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      setMessage(\"Error uploading file.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Upload Document for OCR Processing\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".docx\",\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Upload and Process\"), message && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  }, message), result && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Extracted Data:\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, result)));\n}\nexport default UploadDoc;","map":{"version":3,"names":["React","useState","UploadDoc","file","setFile","result","setResult","message","setMessage","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","data","json","ok","error","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick"],"sources":["/Users/gayatrikrishnakumar/Documents/Interdepartmental EL/client/src/components/UploadDoc.js"],"sourcesContent":["// /client/src/components/UploadDoc.js\nimport React, { useState } from 'react';\n\nfunction UploadDoc() {\n  const [file, setFile] = useState(null);\n  const [result, setResult] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      setMessage(\"Please select a file first.\");\n      return;\n    }\n    \n    // Prepare FormData\n    const formData = new FormData();\n    formData.append(\"docfile\", file);\n    \n    try {\n      const response = await fetch(\"http://localhost:5004/api/upload-document\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setResult(data.result);\n        setMessage(\"File processed successfully!\");\n      } else {\n        setMessage(data.message || \"Error processing file.\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      setMessage(\"Error uploading file.\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Upload Document for OCR Processing</h1>\n      <input type=\"file\" accept=\".docx\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload and Process</button>\n      {message && <p>{message}</p>}\n      {result && (\n        <div>\n          <h3>Extracted Data:</h3>\n          <pre>{result}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UploadDoc;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}